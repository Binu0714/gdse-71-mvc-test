/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.mvc.view;

import edu.ijse.mvc.Dto.customerDto;
import edu.ijse.mvc.Dto.itemDto;
import edu.ijse.mvc.controller.customerController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Umesh Induwara
 */
public class customerVeiw extends javax.swing.JFrame {
        private final customerController CUSTOMER_CONTROLLER;

    /**
     * Creates new form customerVeiw
     */
    public customerVeiw() {
        CUSTOMER_CONTROLLER = new customerController();
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        customerForm = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        mr = new javax.swing.JRadioButton();
        miss = new javax.swing.JRadioButton();
        name = new javax.swing.JLabel();
        nameText1 = new javax.swing.JTextField();
        dob = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        month = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        salary = new javax.swing.JLabel();
        salaryText = new javax.swing.JTextField();
        address = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        city = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        province = new javax.swing.JLabel();
        provinceText1 = new javax.swing.JTextField();
        pc = new javax.swing.JLabel();
        pcText = new javax.swing.JTextField();
        yearSelect = new javax.swing.JComboBox<>();
        monthSelect = new javax.swing.JComboBox<>();
        daySelect = new javax.swing.JComboBox<>();
        delete = new javax.swing.JButton();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerForm.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        customerForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customerForm.setText("Customer Form");

        id.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        id.setText("Customer ID");

        title.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        title.setText("Customer Title");

        buttonGroup1.add(mr);
        mr.setText("Mr");
        mr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrActionPerformed(evt);
            }
        });

        buttonGroup1.add(miss);
        miss.setText("Miss");

        name.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        name.setText("Customer Name");

        dob.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        dob.setText("Date Of Birth");

        year.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        year.setText("Year");

        month.setText("Month");

        day.setText("Day");

        salary.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        salary.setText("Salary");

        address.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        address.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        address.setText("Address");

        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        city.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        city.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        city.setText("City");

        province.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        province.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        province.setText("Province");

        provinceText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provinceText1ActionPerformed(evt);
            }
        });

        pc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pc.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pc.setText("Postal Code");

        pcText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcTextActionPerformed(evt);
            }
        });

        yearSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", " " }));

        monthSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthSelectActionPerformed(evt);
            }
        });

        daySelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 0, 0));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        save.setForeground(new java.awt.Color(0, 204, 0));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(0, 102, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(customerForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(yearSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cityText, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(salaryText))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(monthSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(daySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(province, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(provinceText1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(pc, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pcText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mr, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(miss, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(customerForm, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mr)
                    .addComponent(miss))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(daySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salaryText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(province, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(provinceText1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pcText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mrActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextActionPerformed

    private void provinceText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provinceText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_provinceText1ActionPerformed

    private void pcTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcTextActionPerformed

    private void monthSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthSelectActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        deleteCustomer();
    }//GEN-LAST:event_deleteActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        saveCustomer();
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        updateCustomer();
    }//GEN-LAST:event_updateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        searhCustomer();
    }//GEN-LAST:event_tableMouseClicked
    
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerVeiw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerVeiw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerVeiw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerVeiw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customerVeiw().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address;
    private javax.swing.JTextField addressText;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel city;
    private javax.swing.JTextField cityText;
    private javax.swing.JLabel customerForm;
    private javax.swing.JLabel day;
    private javax.swing.JComboBox<String> daySelect;
    private javax.swing.JButton delete;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel id;
    private javax.swing.JTextField idText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton miss;
    private javax.swing.JLabel month;
    private javax.swing.JComboBox<String> monthSelect;
    private javax.swing.JRadioButton mr;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameText1;
    private javax.swing.JLabel pc;
    private javax.swing.JTextField pcText;
    private javax.swing.JLabel province;
    private javax.swing.JTextField provinceText1;
    private javax.swing.JLabel salary;
    private javax.swing.JTextField salaryText;
    private javax.swing.JButton save;
    private javax.swing.JTable table;
    private javax.swing.JLabel title;
    private javax.swing.JButton update;
    private javax.swing.JLabel year;
    private javax.swing.JComboBox<String> yearSelect;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        String columns[] = {"CustID", "CustTitle", "CustName", "DOB" , "salary" , "CustAddress", " City"," Province"," PostalCode"};
        DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        try {
            ArrayList<customerDto> customerDtos = CUSTOMER_CONTROLLER.getAllItems();
            for (customerDto customerDto : customerDtos) {
                
                Object[] rowData = {customerDto.getCustID(), customerDto.getCustTitle(), customerDto.getCustName(), customerDto.getDOB(), customerDto.getSalary(),customerDto.getCustAddress(),customerDto.getCity(),customerDto.getProvince(),customerDto.getPostalCode()};
                dtm.addRow(rowData);
            }   
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        table.setModel(dtm);
    
    }
    
    private void saveCustomer(){
           
            customerDto dto=new customerDto();
            
            dto.setCustID(idText.getText());
            dto.setCustTitle(groupingMethod());
            dto.setCustName(nameText1.getText());
            dto.setDOB((String)yearSelect.getSelectedItem()+"-"+(String)monthSelect.getSelectedItem()+"-"+(String)daySelect.getSelectedItem());
            dto.setSalary(Double.parseDouble(salaryText.getText()));
            dto.setCustAddress(addressText.getText());
            dto.setCity(cityText.getText());
            dto.setProvince(provinceText1.getText());
            dto.setPostalCode(pcText.getText());
        
        try{    
            CUSTOMER_CONTROLLER.saveCustomer(dto);
            loadTable();
            clearForm();
        
        }catch(Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    public String groupingMethod(){
       buttonGroup1.add(mr);
       buttonGroup1.add(miss);
       
       String resultText;
        if(mr.isSelected()){
            resultText="Mr";
        }
        else if(miss.isSelected()){
             resultText="Miss";
        }

        else{
            resultText="-";
        }

        return resultText;
    }
        
     public void updateCustomer(){
             
            customerDto dto = new customerDto();
               
            dto.setCustID(idText.getText());
            dto.setCustTitle(groupingMethod());
            dto.setCustName(nameText1.getText());
            dto.setDOB((String)yearSelect.getSelectedItem()+"-"+(String)monthSelect.getSelectedItem()+"-"+(String)daySelect.getSelectedItem());
            dto.setSalary(Double.parseDouble(salaryText.getText()));
            dto.setCustAddress(addressText.getText());
            dto.setCity(cityText.getText());
            dto.setProvince(provinceText1.getText());
            dto.setPostalCode(pcText.getText());
        
         try {
            CUSTOMER_CONTROLLER.updateCustomer(dto);
            JOptionPane.showMessageDialog(this, "wade hari..");
            loadTable();
            clearForm();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
     
     public void clearForm(){
        idText.setText("");
        buttonGroup1.clearSelection();
        nameText1.setText("");
        daySelect.setSelectedIndex(0);
        monthSelect.setSelectedIndex(0);
        yearSelect.setSelectedIndex(0);
        salaryText.setText("");
        addressText.setText("");
        cityText.setText("");
        provinceText1.setText("");
        pcText.setText("");

    }
     
     private void searhCustomer() {
        String CustId = (String) table.getValueAt(table.getSelectedRow(), 0);
        System.out.println(CustId);

        try {
            customerDto customerDto = CUSTOMER_CONTROLLER.searchCustomer(CustId);
            
            if (customerDto != null) {
                idText.setText(customerDto.getCustID());
                setRadioButton(customerDto.getCustTitle());
                setDOB(customerDto.getDOB());
                nameText1.setText(customerDto.getCustName());
                salaryText.setText(Double.toString(customerDto.getSalary()));
                addressText.setText(customerDto.getCustAddress());
                cityText.setText(customerDto.getCity());
                provinceText1.setText(customerDto.getProvince());
                pcText.setText(customerDto.getPostalCode());
            } else {
                JOptionPane.showMessageDialog(this, "Item Not Found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
     
     private void setRadioButton(String title){
        if(title.equals("Mr")){
            mr.setSelected(true);
            miss.setSelected(false); 
        }

        else if(title.equals("Miss")){
            mr.setSelected(false);
            miss.setSelected(true);         
        }
        
        
    }
     
     private void setDOB(String dob){
      String[] dobParts = dob.split("-");
      if (dobParts.length == 3) {
        String year = dobParts[0];
        String month = dobParts[1]; 
        String day = dobParts[2];

        yearSelect.setSelectedItem(year);
        monthSelect.setSelectedItem(month);
        daySelect.setSelectedItem(day);
    } else {
        JOptionPane.showMessageDialog(this, "Invalid date format!");
    }
    }
     
     private void deleteCustomer(){
        String CustId = (String) table.getValueAt(table.getSelectedRow(), 0);
        System.out.println(CustId);

        try {

            String customerDto = CUSTOMER_CONTROLLER.deleteCustomer(CustId);
                if (customerDto =="Success") {
                    JOptionPane.showMessageDialog(this, CustId+" deleted sucesssfuly..");
                } else {
                    JOptionPane.showMessageDialog(this, "id Not Found");
                }
            loadTable();
            clearForm();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalid customer id");
        }
        loadTable();
        clearForm();
    }
    
}


